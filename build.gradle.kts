/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.12.1/samples
 */

// Plugin and required dependencies
plugins {
    id("java")
    id("org.jetbrains.intellij") version "1.17.4"
    kotlin("jvm")
    id("pmd")
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

// PMD configuration
pmd {
    toolVersion = "7.10.0"
    isConsoleOutput = true
    ruleSetFiles = files("config/pmd/pmd.xml")
}

// Project metadata
group = "com.project"
version = "1.0-SNAPSHOT"

// Repositories for dependencies
repositories {
    mavenCentral()
}

// Dependencies including PMD, Kotlin, and required libraries
dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
    testImplementation("org.mockito:mockito-junit-jupiter:5.4.0")
    implementation("net.sourceforge.pmd:pmd-core:7.10.0")
    implementation("net.sourceforge.pmd:pmd-java:7.10.0")
    implementation(kotlin("stdlib-jdk8"))
    implementation("io.github.cdimascio:dotenv-java:3.2.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.0")
    implementation("org.apache.httpcomponents.client5:httpclient5:5.2.1")
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:2.20.0")
    implementation("com.squareup.okhttp3:okhttp:4.12.0")
}

// IntelliJ plugin configuration
intellij {
    version.set("2024.2")
    type.set("IC")
    plugins.set(listOf("java"))
}

// Java and Kotlin toolchain settings
kotlin {
    jvmToolchain(17)
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

// Ensures correct file handling and prevents duplicate JAR entries
tasks {
    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        from(
            *configurations.runtimeClasspath.get()
                .filter { it.exists() }
                .map { zipTree(it) }
                .toTypedArray()
        )
    }
}

// Prevents conflicts by merging service files
tasks {
    shadowJar {
        mergeServiceFiles()
    }
}

// Improves IntelliJ compatibility by avoiding unnecessary indexing issues
tasks.buildSearchableOptions {
    enabled = false
}

// Encoding and test framework settings
tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

tasks.withType<Test> {
    useJUnitPlatform()
}

// Ensures compatibility with specified IntelliJ versions
tasks {
    patchPluginXml {
        sinceBuild.set("233")
        untilBuild.set("243.*")
    }
}